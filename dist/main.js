/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/css-loader/dist/cjs.js!./src/css/style.css":
/*!*****************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/css/style.css ***!
  \*****************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `body {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  overflow: auto;\n  background-color: rgb(231, 250, 255);\n  min-height: 100vh;\n  margin: 0;\n}\n\nbutton {\n  cursor: pointer;\n  background-color: rgb(255, 136, 0);\n  border: 2px solid rgb(212, 113, 0);\n  border-radius: 12px;\n  height: 3em;\n  width: 6em;\n}\n\nbutton:hover {\n  background-color: rgb(255, 180, 94);\n}\n\nh1 {\n  font-size: 40px;\n}\n\ntable {\n  border-collapse: collapse;\n}\n\ntd,\nth {\n  text-align: center;\n  width: 40px;\n  height: 40px;\n}\n\ntd {\n  border: 1px solid black;\n}\n\ntr {\n  height: 40px;\n}\n\n.alignVertical {\n  display: flex;\n  align-items: flex-start;\n  gap: 10px;\n}\n\n.alignHorizontal {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 10px;\n}\n\n.gameboard td {\n  background-color: blue;\n}\n\n.gameboard td:hover, .gameboardCellHover {\n  background-color: rgb(0, 162, 255);\n}\n\n.playerData {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n}\n\n.ship {\n  cursor: grab;\n}\n\n.shipCell, .shipCellContainer {\n  background-color: black;\n}\n\n.shipCell {\n  height: 100%;\n}\n\n.textLarge {\n  font-size: 28px;\n}\n\n.textMedium {\n  font-size: 22px;\n}\n\n#gameView {\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  width: 100%;\n}\n\n#playerView {\n  display: flex;\n  justify-content: space-around;\n  background-color: rgb(142, 213, 255);\n  width: 95%;\n  margin-bottom: 30px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  border: 2px solid blue;\n}\n\n#shipButtonView {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n}\n\n#shipView {\n  display: flex;\n  flex-direction: column;\n}\n\n#shipyard {\n  flex: auto;\n  padding: 20px;\n  border: 2px solid blue;\n  background-color: rgb(142, 213, 255);\n}\n\n#statusView {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  margin-bottom: 30px;\n}`, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://battleship/./src/css/style.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};\n\n//# sourceURL=webpack://battleship/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/noSourceMaps.js":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/noSourceMaps.js ***!
  \**************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function (i) {\n  return i[1];\n};\n\n//# sourceURL=webpack://battleship/./node_modules/css-loader/dist/runtime/noSourceMaps.js?");

/***/ }),

/***/ "./src/css/style.css":
/*!***************************!*\
  !*** ./src/css/style.css ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../node_modules/css-loader/dist/cjs.js!./style.css */ \"./node_modules/css-loader/dist/cjs.js!./src/css/style.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://battleship/./src/css/style.css?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

eval("\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://battleship/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

eval("\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;\n\n//# sourceURL=webpack://battleship/./node_modules/style-loader/dist/runtime/insertBySelector.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;\n\n//# sourceURL=webpack://battleship/./node_modules/style-loader/dist/runtime/insertStyleElement.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;\n\n//# sourceURL=webpack://battleship/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;\n\n//# sourceURL=webpack://battleship/./node_modules/style-loader/dist/runtime/styleDomAPI.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;\n\n//# sourceURL=webpack://battleship/./node_modules/style-loader/dist/runtime/styleTagTransform.js?");

/***/ }),

/***/ "./src/js/gameComponents.js":
/*!**********************************!*\
  !*** ./src/js/gameComponents.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   gameComps: () => (/* binding */ gameComps)\n/* harmony export */ });\n/* harmony import */ var _random__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./random */ \"./src/js/random.js\");\n\r\n\r\n\r\nconst gameComps = (() => {\r\n    function Gameboard(size=10) {\r\n        const _size = size\r\n        const _cells = createCells()\r\n        const _ships = []\r\n        let _sunkShipCount = 0\r\n        // once active, a board can no longer add ships\r\n        let _active = false\r\n\r\n        function Cell() {\r\n            let _ship = null\r\n            let _hit = false\r\n\r\n            function hit() {\r\n\r\n                if (_hit) {\r\n                    throw new Error('Cell hit twice.')\r\n                }\r\n\r\n                _hit = true\r\n\r\n                if (_ship) {\r\n                    _ship.hit()\r\n                }\r\n            }\r\n\r\n            function getHit() {\r\n                return _hit\r\n            }\r\n\r\n            function getShip() {\r\n                return _ship\r\n            }\r\n\r\n            function setShip(ship) {\r\n                if (_ship) {  \r\n                    throw new Error(`Cell is already occupied.`)\r\n                }\r\n                if (ship.getType() !== 'ship') {\r\n                    throw new TypeError()\r\n                }\r\n\r\n                _ship = ship\r\n            }\r\n\r\n            return {hit, getHit, getShip, setShip}\r\n        }\r\n\r\n        function createCells() {\r\n            const cells = []\r\n\r\n            for (let i=0; i<_size; i++) {\r\n                const row = []\r\n\r\n                for (let j=0; j<_size; j++) {\r\n                    row.push(Cell())\r\n                }\r\n\r\n                cells.push(row)\r\n            }\r\n\r\n            return cells\r\n        }\r\n\r\n        // coords have format [row, col]\r\n        function addShip(ship, startCoords, endCoords) {\r\n\r\n            if (_active) {\r\n                throw new Error(\r\n                    'Tried to add ship to board after first attack.'\r\n                )\r\n            }\r\n\r\n            if (_ships.includes(ship)) {\r\n                throw new Error('Tried to add same ship twice.')\r\n            }\r\n            \r\n            if (!shipFitsCoords(ship, startCoords, endCoords)) {\r\n                throw new Error(\r\n                    `Ship of length ${ship.getLength()} cannot fit into`\r\n                    + ` coord range [${startCoords}, ${endCoords}]`\r\n                    + ` vertically or horizontally.`\r\n                )\r\n            }\r\n\r\n            let [startRow, startCol] = startCoords\r\n            let [endRow, endCol] = endCoords\r\n\r\n            if (startCol > endCol || startRow > endRow) {\r\n                [startRow, startCol] = endCoords\r\n                [endRow, endCol] = startCoords\r\n            }\r\n\r\n            if (startCol === endCol) {\r\n                let col = startCol\r\n\r\n                for (let row=startRow; row<endRow+1; row++) {\r\n                    _cells[row][col].setShip(ship)\r\n                }\r\n            }\r\n            else {\r\n                let row = startRow\r\n\r\n                for (let col=startCol; col<endCol+1; col++) {\r\n                    _cells[row][col].setShip(ship)\r\n                }\r\n            }\r\n\r\n            _ships.push(ship)\r\n        }\r\n\r\n        function shipFitsCoords(ship, startCoords, endCoords) {\r\n            const [startRow, startCol] = startCoords\r\n            const [endRow, endCol] = endCoords\r\n\r\n            if (startRow === endRow) {\r\n                return Math.abs(startCol - endCol) + 1 === ship.getLength()\r\n            }\r\n            else if (startCol === endCol) {\r\n                return Math.abs(startRow - endRow) + 1 === ship.getLength()\r\n            }\r\n            \r\n            return false\r\n        }\r\n\r\n        function receiveAttack(coords) {\r\n            _active = true\r\n            \r\n            const [row, col] = coords\r\n            const cell = _cells[row][col]\r\n            cell.hit()\r\n\r\n            const ship = cell.getShip()\r\n\r\n            if (ship && ship.isSunk()) {\r\n                _sunkShipCount++\r\n            }\r\n        }\r\n\r\n        function allShipsSunk() {\r\n            return _sunkShipCount === _ships.length\r\n        }\r\n\r\n        function randomUnhitCoords() {\r\n            let originRow = (0,_random__WEBPACK_IMPORTED_MODULE_0__.getRandomInt)(_size)\r\n            let originCol = (0,_random__WEBPACK_IMPORTED_MODULE_0__.getRandomInt)(_size)\r\n\r\n            const shifts = [[1, -1], [-1, -1], [1, 1], [-1, 1]]\r\n            const shift = shifts[(0,_random__WEBPACK_IMPORTED_MODULE_0__.getRandomInt)(shifts.length)]\r\n\r\n            let row = originRow\r\n            let col = originCol\r\n\r\n            // Game will have to end after all cells are hit, so \r\n            // this function should always find an unhit cell\r\n            while (_cells[row][col].getHit()) {\r\n                row += shift[0]\r\n                \r\n                if (row === _size || row === -1) {\r\n                    row = (row + _size) % _size\r\n                    col += shift[1]\r\n\r\n                    if (col === _size || col === -1) {\r\n                        col = (col + _size) % _size\r\n                    }\r\n                }\r\n\r\n                if (row === originRow && col === originCol) {\r\n                    return null\r\n                }\r\n            }\r\n\r\n            return [row, col]\r\n        }\r\n\r\n        // Finds all vertical/horizontal [start, end] coord pairs \r\n        // that can accommodate the input length and returns one \r\n        // randomly\r\n        function randomEmptyStraightLine(length) {\r\n            if (length > _size || length < 2) {\r\n                throw new RangeError(\r\n                    `Length has range [2, ${_size}].`\r\n                )\r\n            }\r\n\r\n            const verticals = emptyVerticalLines(length)\r\n            const horizontals = emptyHorizontalLines(length)\r\n            const lines = [...verticals, ...horizontals]\r\n\r\n            if (!lines.length) {\r\n                return null\r\n            }\r\n\r\n            return lines[(0,_random__WEBPACK_IMPORTED_MODULE_0__.getRandomInt)(lines.length)]\r\n            \r\n            // return lines[0]\r\n        }\r\n\r\n        function emptyVerticalLines(length) {\r\n            const lines = []\r\n            let row = 0\r\n            let col = 0\r\n\r\n            while (col < _size) {\r\n\r\n                if (row + length > _size) {\r\n                    // skip to end of row to quicken leap to next row\r\n                    row = _size - 1\r\n                }\r\n                else {\r\n                    let nonemptyIndex = null\r\n\r\n                    for (let i=0; i<length; i++) {\r\n                        // No break, since index after nonempty index\r\n                        // could also be nonempty\r\n                        if (_cells[row + i][col].getShip()) {\r\n                            nonemptyIndex = row + i\r\n                        }\r\n                    }\r\n        \r\n                    if (nonemptyIndex !== null) {\r\n                        row = nonemptyIndex\r\n                    }\r\n                    else {\r\n                        lines.push([\r\n                            [row, col],\r\n                            [row + length - 1, col]\r\n                        ])\r\n                    }\r\n                }\r\n\r\n                row++\r\n                \r\n                if (row === _size) {\r\n                    row = 0\r\n                    col++\r\n                }\r\n            }\r\n\r\n            return lines\r\n        }\r\n\r\n        function emptyHorizontalLines(length) {\r\n            const lines = []\r\n            let row = 0\r\n            let col = 0\r\n\r\n            while (row < _size) {\r\n\r\n                if (col + length > _size) {\r\n                    // skip to end of col to quicken leap to next col\r\n                    col = _size - 1\r\n                }\r\n                else {\r\n                    let nonemptyIndex = null\r\n\r\n                    for (let i=0; i<length; i++) {\r\n                        // No break, since index after nonempty index\r\n                        // could also be nonempty\r\n                        if (_cells[row][col + i].getShip()) {\r\n                            nonemptyIndex = col + i\r\n                        }\r\n                    }\r\n        \r\n                    if (nonemptyIndex !== null) {\r\n                        col = nonemptyIndex\r\n                    }\r\n                    else {\r\n                        lines.push([\r\n                            [row, col],\r\n                            [row, col + length - 1]\r\n                        ])\r\n                    }\r\n                }\r\n\r\n                col++\r\n                \r\n                if (col === _size) {\r\n                    col = 0\r\n                    row++\r\n                }\r\n            }\r\n\r\n            return lines\r\n        }\r\n\r\n        function getSize() {\r\n            return _size\r\n        }\r\n\r\n        return { \r\n            addShip, \r\n            receiveAttack, \r\n            allShipsSunk, \r\n            getSize, \r\n            randomUnhitCoords,\r\n            randomEmptyStraightLine\r\n        }\r\n    }\r\n\r\n\r\n    function Ship(name, length) {\r\n        Ship.max_length = 5\r\n        Ship.min_length = 2\r\n        Ship.nextId = Ship.nextId ?? 0\r\n\r\n        const _id = Ship.nextId++\r\n        const _name = name\r\n        const _length = validLength(length)\r\n        let _hits = 0\r\n\r\n        function validLength(length) {\r\n            \r\n            if (length > Ship.max_length || length < Ship.min_length) {\r\n                throw new RangeError(`Length range is [2, 5].`)\r\n            }\r\n            \r\n            return length\r\n        }\r\n\r\n        function hit() {\r\n            _hits++\r\n        }\r\n\r\n        function isSunk() {\r\n            return _hits === _length\r\n        }\r\n\r\n        function getId() {\r\n            return _id\r\n        }\r\n\r\n        function getName() {\r\n            return _name\r\n        }\r\n\r\n        function getLength() {\r\n            return _length\r\n        }\r\n\r\n        function getType() {\r\n            return 'ship'\r\n        }\r\n\r\n        return { hit, isSunk, getId, getName, getLength, getType }\r\n    }\r\n\r\n\r\n    function Player(name, gameBoard, ai=false) {\r\n        Player.nextId = Player.nextId ?? 0\r\n\r\n        const _id = Player.nextId++\r\n        const _name = name\r\n        const _gameBoard = gameBoard\r\n        const _ai = ai\r\n        const _wins = 0\r\n\r\n        function win() {\r\n            _wins++\r\n        }\r\n\r\n        function getId() {\r\n            return _id\r\n        }\r\n        \r\n        function getName() {\r\n            return _name\r\n        }\r\n\r\n        function getGameBoard() {\r\n            return _gameBoard\r\n        }\r\n\r\n        function getAi() {\r\n            return _ai\r\n        }\r\n\r\n        function getWins() {\r\n            return _wins\r\n        }\r\n\r\n        return { \r\n            win, \r\n            getId, \r\n            getName, \r\n            getGameBoard, \r\n            getAi, \r\n            getWins \r\n        }\r\n    }\r\n\r\n    return { Gameboard, Ship, Player }\r\n\r\n})()\r\n\r\n\r\n\n\n//# sourceURL=webpack://battleship/./src/js/gameComponents.js?");

/***/ }),

/***/ "./src/js/index.js":
/*!*************************!*\
  !*** ./src/js/index.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _css_style_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../css/style.css */ \"./src/css/style.css\");\n/* harmony import */ var _view__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./view */ \"./src/js/view.js\");\n/* harmony import */ var _gameComponents__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./gameComponents */ \"./src/js/gameComponents.js\");\n\r\n\r\n\r\n\r\n\r\nconst game = (() => {\r\n    const gameboardSize = 10\r\n    const shipParams = [\r\n        ['Carrier', 5],\r\n        ['Battleship', 4],\r\n        ['Destroyer', 3],\r\n        ['Submarine', 3],\r\n        ['Patrol Boat', 2]\r\n    ]\r\n    const players = [\r\n        _gameComponents__WEBPACK_IMPORTED_MODULE_2__.gameComps.Player('Tango', _gameComponents__WEBPACK_IMPORTED_MODULE_2__.gameComps.Gameboard(gameboardSize)),\r\n        _gameComponents__WEBPACK_IMPORTED_MODULE_2__.gameComps.Player('Bingo', _gameComponents__WEBPACK_IMPORTED_MODULE_2__.gameComps.Gameboard(gameboardSize))\r\n    ]\r\n    let turnIndex = 0\r\n    let player = players[turnIndex]\r\n    \r\n    \r\n    function initialize() {\r\n        turnIndex = 0\r\n        player = players[turnIndex]\r\n\r\n        _view__WEBPACK_IMPORTED_MODULE_1__.view.displayPlayerView(players)\r\n        _view__WEBPACK_IMPORTED_MODULE_1__.view.displayStatusStart(deployLoop)\r\n    }\r\n\r\n    function deployLoop() {\r\n        const ships = shipParams.map(params => _gameComponents__WEBPACK_IMPORTED_MODULE_2__.gameComps.Ship(...params))\r\n        \r\n        _view__WEBPACK_IMPORTED_MODULE_1__.view.displayStatusMsg(`Deploy your ships, ${player.getName()}.`)\r\n        \r\n        _view__WEBPACK_IMPORTED_MODULE_1__.view.displayDeployView(gameboardSize, ships, player, () => {\r\n            // add all ships to Gameboard via addShip()!!!!!!!!!!!!!\r\n\r\n            nextTurn()\r\n\r\n            if (turnIndex === 0) {\r\n                _view__WEBPACK_IMPORTED_MODULE_1__.view.displayBattleView(gameboardSize, players)\r\n                battleLoop()\r\n            }\r\n            else {\r\n                deployLoop()\r\n            }\r\n        })\r\n\r\n        /* Add drag and drop listeners */\r\n\r\n        addShipCellDragListeners() \r\n        \r\n        const gameboardCells = Array.from(\r\n            document.querySelectorAll('.gameboard td')\r\n        )\r\n\r\n        for (const cell of gameboardCells) {\r\n            addGameboardCellDropListeners(cell, ships)\r\n        }\r\n    }\r\n\r\n    function addShipCellDragListeners() {\r\n        document.addEventListener(\"dragstart\", function (event) {\r\n            const draggable = event.target\r\n            const rect = draggable.getBoundingClientRect()\r\n            const x = event.clientX - rect.left\r\n            const y = event.clientY - rect.top\r\n            // transfer\r\n            // 1 - id of dragged\r\n            // 2 - position of mouse within dragged\r\n            event.dataTransfer.setData(\"dragId\", draggable.id)\r\n            event.dataTransfer.setData(\"mouseX\", x)\r\n            event.dataTransfer.setData(\"mouseY\", y)\r\n        });\r\n    }\r\n\r\n    function addGameboardCellDropListeners(gameboardCell, ships) {\r\n        gameboardCell.addEventListener(\"dragover\", function (event) {\r\n            event.preventDefault();\r\n        });\r\n        \r\n        gameboardCell.addEventListener(\"dragenter\", function (event) {\r\n            const target = event.target;\r\n            const classes = target.classList\r\n        \r\n            // If target is gameboard cell and it is not a ship cell,\r\n            // consider dropping ship cell in target\r\n            if (\r\n                classes.contains(\"dropTarget\")\r\n                && !classes.contains('shipCellContainer')\r\n            ) {\r\n                classes.add('gameboardCellHover')\r\n            }\r\n        });\r\n        \r\n        gameboardCell.addEventListener(\"dragleave\", function (event) {\r\n            const target = event.target;\r\n            const classes = target.classList\r\n        \r\n            if (\r\n                classes.contains(\"dropTarget\")\r\n                && !classes.contains('shipCellContainer')\r\n            ) {\r\n                classes.remove('gameboardCellHover')\r\n            }\r\n        });\r\n        \r\n        gameboardCell.addEventListener(\"drop\", function (event) {\r\n            event.preventDefault();\r\n            const target = event.target;\r\n            const targetClasses = target.classList\r\n            \r\n            if (\r\n                !targetClasses.contains(\"dropTarget\")\r\n                || targetClasses.contains('shipCellContainer')\r\n            ) {\r\n                return\r\n            }\r\n\r\n            targetClasses.remove('gameboardCellHover')\r\n\r\n            // coords of targeted gameboard cell\r\n            const targetCoords = target.id\r\n                .split(':')[1].split('-')\r\n                .map(coord => parseInt(coord))\r\n\r\n            // shipID format is playerID:shipName-shipID\r\n            const shipTableId = event.dataTransfer.getData(\"dragId\");\r\n            const shipTable = document.getElementById(shipTableId)\r\n            const shipCells = Array.from(shipTable.querySelectorAll('div'))\r\n            const rect = shipTable.getBoundingClientRect()\r\n\r\n            const shipId = parseInt(shipTableId.split('-')[1])\r\n            const [ship] = ships.filter(ship => ship.getId() === shipId)\r\n            \r\n            const shipyard = document.getElementById('shipyard')\r\n            const shipIsVertical = shipyard.classList\r\n                .contains('alignVertical')\r\n            \r\n            if (shipIsVertical) {\r\n                const mouseY = event.dataTransfer.getData(\"mouseY\");\r\n                const height = rect.bottom - rect.top\r\n                const shipCellSize = height / ship.getLength()\r\n                const shipCellsBefore = Math.floor(mouseY / shipCellSize)\r\n\r\n                // coords of gameboard cell where first ship cell will be\r\n                const shipStartCoords = [\r\n                    targetCoords[0]-shipCellsBefore,\r\n                    targetCoords[1]\r\n                ]\r\n\r\n                if (\r\n                    shipCellsFit(\r\n                        shipStartCoords, \r\n                        (coords, i) => [coords[0]+i, coords[1]],\r\n                        shipCells\r\n                    )\r\n                ) {\r\n                    // removeShipCells(shipCells)\r\n                    addShipCells(\r\n                        shipStartCoords, \r\n                        (coords, i) => [coords[0]-i, coords[1]],\r\n                        shipCells\r\n                    )\r\n                }   \r\n            }\r\n            else {\r\n                const mouseX = event.dataTransfer.getData(\"mouseX\");\r\n                const width = rect.right - rect.left\r\n                const shipCellSize = width / ship.getLength()\r\n                const shipCellsBefore = Math.floor(mouseX / shipCellSize)\r\n\r\n                // coords of gameboard cell where first ship cell will be\r\n                const shipStartCoords = [\r\n                    targetCoords[0],\r\n                    targetCoords[1]-shipCellsBefore\r\n                ]\r\n                \r\n                if (\r\n                    shipCellsFit(\r\n                        shipStartCoords, \r\n                        (coords, i) => [coords[0], coords[1]+i],\r\n                        shipCells, \r\n                    )\r\n                ) {\r\n                    // removeShipCells(shipCells)\r\n                    addShipCells(\r\n                        shipStartCoords,  \r\n                        (coords, i) => [coords[0], coords[1]-i],\r\n                        shipCells\r\n                    )\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    // Parameter updateCoord arguments include coords as [row, col] \r\n    // and an integer, where the integer only updates row/col.\r\n    // Parameter updateCoord returns coords as [row, col].\r\n    function shipCellsFit(originCoords, updateCoord, shipCells) {\r\n        return fromOriginGameboardCell(\r\n            originCoords, \r\n            shipCells.length, \r\n            updateCoord, \r\n            gameboardCell => {\r\n                return (\r\n                    gameboardCell \r\n                    && !gameboardCell.classList\r\n                        .contains('shipCellContainer')\r\n                )\r\n            }\r\n        )\r\n    }\r\n\r\n    function removeShipCells(shipCells) {\r\n\r\n        for (const cell of shipCells) {\r\n            const cellContainer = cell.parentElement\r\n            cellContainer.classList.remove('shipCellContainer')\r\n            cellContainer.removeChild(cell)\r\n            \r\n            const shipTable = cellContainer.parentElement.parentElement\r\n            shipTable.style.display = 'none'\r\n        }\r\n    }\r\n\r\n\r\n    // Parameter shipCells is a list of ship cells ordered by proximity\r\n    // to the originCoords coords (greater proximity, earlier in list)\r\n    function addShipCells(originCoords, updateCoord, shipCells) {\r\n        return fromOriginGameboardCell(\r\n            originCoords, \r\n            shipCells.length, \r\n            updateCoord, \r\n            gameboardCell => {\r\n                gameboardCell.classList.add('shipCellContainer')\r\n                gameboardCell.append(shipCells[0])\r\n                shipCells.shift()                \r\n            }\r\n        )\r\n    }\r\n\r\n    // Perform cellFunc on gameboard cells starting at originCoords\r\n    // and extending the operation to extension cells in the direction \r\n    // specified by updateCoord.\r\n    // Function cellFunc should return a boolean; if false is returned\r\n    // when applying it to any cell, this function returns false.\r\n    // Else, this function returns true. \r\n    function fromOriginGameboardCell(\r\n        originCoords, cellCount, updateCoord, cellFunc\r\n    ) {\r\n        \r\n        for (let i=0; i<cellCount; i++) {\r\n            const [row, col] = updateCoord(originCoords, i)\r\n            const gameboardCell = document.getElementById(\r\n                `${player.getId()}:${row}-${col}`\r\n            )\r\n\r\n            if (!cellFunc(gameboardCell)) {\r\n                return false\r\n            }            \r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    function battleLoop() {\r\n        _view__WEBPACK_IMPORTED_MODULE_1__.view.displayStatusMsg(`It is your turn, ${player.getName()}.`)\r\n         \r\n        // The following is a callback for when cell selected:\r\n        // get selected cell\r\n        // hit selected cell\r\n        // change color of selected cell to indicate it has been hit\r\n        // prevent further clicks on selected cell\r\n        // if ship and sunk, show ship in red\r\n        // if ship, reveal that part of ship in its natural color\r\n        // then...\r\n        \r\n        if (player.getGameBoard().allShipsSunk()) {\r\n            player.win()\r\n            _view__WEBPACK_IMPORTED_MODULE_1__.view.displayStatusEnd(player, initialize)\r\n        }\r\n        else {\r\n            nextTurn()\r\n            battleLoop()\r\n        } \r\n    }\r\n\r\n    function nextTurn() {\r\n        turnIndex = (turnIndex + 1) % players.length\r\n        player = players[turnIndex]\r\n    }\r\n\r\n    return { initialize }\r\n\r\n})()\r\n\r\n\r\ngame.initialize()\n\n//# sourceURL=webpack://battleship/./src/js/index.js?");

/***/ }),

/***/ "./src/js/random.js":
/*!**************************!*\
  !*** ./src/js/random.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRandomInt: () => (/* binding */ getRandomInt)\n/* harmony export */ });\nfunction getRandomInt(max) {\r\n    return Math.floor(Math.random() * max)\r\n}\r\n\r\n\n\n//# sourceURL=webpack://battleship/./src/js/random.js?");

/***/ }),

/***/ "./src/js/view.js":
/*!************************!*\
  !*** ./src/js/view.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   view: () => (/* binding */ view)\n/* harmony export */ });\nconst view = (() => {\r\n    const playerView = document.getElementById('playerView')\r\n    const statusView = document.getElementById('statusView')\r\n    statusView.classList.add('textMedium')\r\n    \r\n    const gameView = document.getElementById('gameView')\r\n\r\n    function displayPlayerView(players) {\r\n        playerView.innerHTML = ''\r\n        \r\n        for (const player of players) {\r\n            const data = document.createElement('div')\r\n            data.classList.add('playerData')\r\n        \r\n            const name = document.createElement('div')\r\n            name.classList.add('textMedium')\r\n            name.textContent = player.getName()\r\n\r\n            const wins = document.createElement('div')\r\n            wins.textContent = `Wins: ${player.getWins()}`\r\n        \r\n            data.append(name, wins)\r\n            playerView.append(data)\r\n        }\r\n    }\r\n\r\n    function displayStatusStart(onStartFunc) {\r\n        statusView.innerHTML = ''\r\n\r\n        const startBtn = document.createElement('button')\r\n        startBtn.classList.add('textLarge')\r\n        startBtn.textContent = 'Start'\r\n        startBtn.onclick = onStartFunc\r\n\r\n        statusView.append(startBtn)\r\n    }\r\n\r\n    function displayStatusEnd(winningPlayer, onEndFunc) {\r\n        statusView.innerHTML = ''\r\n\r\n        const p = document.createElement('p')\r\n        p.textContent = `${winningPlayer.getName()} won the game!`\r\n\r\n        const startBtn = document.createElement('button')\r\n        startBtn.classList.add('textLarge')\r\n        startBtn.textContent = 'Play Again'\r\n        startBtn.onclick = onEndFunc\r\n\r\n        statusView.append(p, startBtn)\r\n    }\r\n\r\n    function displayStatusMsg(msg) {\r\n        statusView.innerHTML = ''\r\n\r\n        const p = document.createElement('p')\r\n        p.textContent = msg\r\n        statusView.append(p)\r\n    }\r\n\r\n    function displayDeployView(gameboardSize, ships, player, onDoneFunc) {\r\n        gameView.innerHTML = ''\r\n\r\n        const gameBoard = createGameboard(gameboardSize, player)\r\n\r\n        const shipView = document.createElement('div')\r\n        shipView.id = 'shipView'\r\n        const shipyard = createShipyard(ships, player)\r\n\r\n        const buttonView = document.createElement('div')\r\n        buttonView.id = 'shipButtonView'\r\n        buttonView.classList.add\r\n        \r\n        // option to flip between vertically and horizontal aligned ships\r\n        const flipButton = document.createElement('button')\r\n        flipButton.textContent = 'Flip'\r\n        flipButton.onclick = () => {\r\n            const oldShipyard = document.getElementById('shipyard')\r\n            const oldIsVertical = oldShipyard.classList\r\n                .contains('alignVertical')\r\n            \r\n            const newShipyard = createShipyard(\r\n                ships, player, oldIsVertical\r\n            )\r\n            shipView.replaceChild(newShipyard, oldShipyard)\r\n        }\r\n        \r\n        const doneButton = document.createElement('button')\r\n        doneButton.textContent = 'Done'\r\n        doneButton.onclick = onDoneFunc\r\n\r\n        buttonView.append(flipButton, doneButton)\r\n        shipView.append(buttonView, shipyard)\r\n        gameView.append(gameBoard, shipView)\r\n    }\r\n\r\n    function displayBattleView(gameBoardSize, players) {\r\n        gameView.innerHTML = ''\r\n\r\n        for (const player of players) {\r\n            const gameboard = createGameboard(gameBoardSize, player)\r\n            gameView.append(gameboard)\r\n        }  \r\n    }\r\n\r\n    // Cells ID format is playerID:row-col\r\n    // Gameboard ID format is playerID:gameboard\r\n    function createGameboard(size, player) {\r\n        const gameboard = document.createElement('table')\r\n        gameboard.id = `${player.getId()}:gameboard`\r\n        gameboard.classList.add('gameboard')\r\n\r\n        const rows = size\r\n        const cols = size\r\n        \r\n        const headRow = document.createElement(\"tr\");\r\n\r\n        // add empty col cell\r\n        const emptyColHead = document.createElement(\"th\");\r\n        emptyColHead.classList.add(\"textLarge\");\r\n        headRow.append(emptyColHead);\r\n\r\n        // add col index cells (code used to make letter indexes)\r\n        let code = 65\r\n\r\n        for (let colCount=cols; colCount>0; colCount--) {\r\n            const colHead = document.createElement(\"th\");\r\n            colHead.classList.add(\"textLarge\");\r\n            colHead.textContent = String.fromCharCode(code);\r\n            headRow.append(colHead);\r\n            \r\n            code++\r\n        }\r\n\r\n        gameboard.append(headRow);\r\n\r\n        for (let i = 0; i < rows; i++) {\r\n            const row = document.createElement(\"tr\");\r\n\r\n            for (let j = 0; j < cols + 1; j++) {\r\n                let cell = null;\r\n\r\n                if (j === 0) {\r\n                    cell = document.createElement(\"th\");\r\n                    cell.classList.add(\"textLarge\");\r\n                    cell.textContent = `${i}`;\r\n                } else {\r\n                    cell = document.createElement(\"td\");\r\n                    cell.id = `${player.getId()}:${i}-${j - 1}`;\r\n                    cell.classList.add(\"dropTarget\");\r\n                }\r\n\r\n                row.append(cell);\r\n            }\r\n\r\n            gameboard.append(row);\r\n        }\r\n\r\n        return gameboard \r\n    }\r\n\r\n    // Ship table ID format is playerID:shipName-shipID\r\n    // Ship cell ID format is shipID:i for i in the count of cells ????????? make it playerID:shipName-shipID-i ???????????\r\n    // Ship cell ID is applied to a div within a td element.\r\n    function createShipyard(ships, player, horizontal=true) {\r\n        // want to view ships in ascending length\r\n        ships.sort((s1, s2) => s1.getLength() - s2.getLength())\r\n\r\n        const shipyard = document.createElement('div')\r\n        shipyard.id = 'shipyard'\r\n\r\n        // construct ships out of table cells\r\n        if (horizontal) {\r\n            shipyard.classList.add('alignHorizontal')\r\n\r\n            for (const ship of ships) {\r\n                const shipId = ship.getId()\r\n\r\n                const table = document.createElement('table')\r\n                table.id = `${player.getId()}`\r\n                    + `:${ship.getName()}`\r\n                    + `-${ship.getId()}`\r\n                table.classList.add('ship')\r\n                table.draggable = true\r\n                \r\n                const row = document.createElement('tr')\r\n        \r\n                for (let i=0; i<ship.getLength(); i++) {\r\n                    const cell = document.createElement('td')\r\n                    cell.classList.add('shipCellContainer')\r\n\r\n                    const shipCell = document.createElement('div')\r\n                    shipCell.id = `${shipId}:${i}`\r\n                    shipCell.classList.add('shipCell')\r\n                    \r\n                    cell.append(shipCell)\r\n                    row.append(cell)\r\n                }\r\n        \r\n                table.append(row)\r\n                shipyard.append(table)\r\n            }\r\n        }\r\n        else {\r\n            shipyard.classList.add('alignVertical')\r\n\r\n            for (const ship of ships) {\r\n                const shipId = ship.getId()\r\n\r\n                const table = document.createElement('table')\r\n                table.id = `${player.getId()}`\r\n                    + `:${ship.getName()}`\r\n                    + `-${ship.getId()}`\r\n                table.classList.add('ship')\r\n                table.draggable = true\r\n\r\n                for (let i=0; i<ship.getLength(); i++) {\r\n                    const row = document.createElement('tr')\r\n                    const cell = document.createElement('td')\r\n                    cell.classList.add('shipCellContainer')\r\n\r\n                    const shipCell = document.createElement('div')\r\n                    shipCell.id = `${shipId}:${i}`\r\n                    shipCell.classList.add('shipCell')\r\n\r\n                    cell.append(shipCell)\r\n                    row.append(cell)\r\n                    table.append(row)\r\n                }\r\n\r\n                shipyard.append(table)\r\n            }\r\n        }\r\n\r\n        return shipyard\r\n    }\r\n\r\n    return { \r\n        displayPlayerView, \r\n        displayStatusStart,\r\n        displayStatusEnd,\r\n        displayStatusMsg,\r\n        displayBattleView,\r\n        displayDeployView\r\n    }\r\n\r\n})()\r\n\r\n\r\n\n\n//# sourceURL=webpack://battleship/./src/js/view.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/index.js");
/******/ 	
/******/ })()
;